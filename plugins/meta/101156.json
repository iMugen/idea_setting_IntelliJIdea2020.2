{"id":101156,"xmlId":"com.squaretest.Squaretest","name":"Squaretest","description":"\n<p>\n    Automatically Generate Unit Tests for Java Source Classes. Try Squaretest for free!\n</p>\n<p>\n    <b>Create a Test Class</b><br>\n    Choose <b>Squaretest | Generate Test</b> from the toolbar menu to create a test class for a Java class.\n</p>\n\n<p>\n    <b>Create Test Methods</b><br>\n    Open a test class and choose <b>Squaretest | Generate Test Methods</b> from the toolbar menu; Then, select the test methods you want to create and click OK.\n</p>\n<p>\n    <b>Features</b><br>\n</p>\n<ul>\n    <li>Auto generates Java or Groovy test code using either the JUnit4, JUnit5, SpringMVC, AssertJ, TestNG, Robolectric3+ or AndroidJUnit4 test frameworks and the Mockito mocking framework.</li>\n    <li>Enables you to confirm which dependencies should be mocked (choose <b>Squaretest | Generate Test - Ask to Confirm Mocks</b>)</li>\n    <li>Generates test methods with when(), verify() and assertEquals(..) calls.</li>\n    <li>Generates code to initialize data transfer object beans (DTO beans) returned by dependency interactions.</li>\n    <li>Creates doAnswer() statements for dependency method calls that take in Callables or Runnables.</li>\n    <li>Squaretest also creates test methods for alternate flows by stubbing dependency method calls to throw exceptions.</li>\n    <li>All output can be customized by changing the provided Apache Velocity templates.</li>\n    <li>See <a href=\"https://squaretest.com\">squaretest.com</a> for the full list of features.</li>\n</ul>\n<p>\n    <b>Support</b><br>\n    Please feel free to post feedback, questions and feature requests to the <a href=\"https://squaretest.com#support\">forum</a>.\n</p>\n    ","tags":["Unit testing"],"vendor":"Squaretest LLC","version":"1.5.6","notes":"\n          <i>Changes in 1.5.6:</i>\n          <ul>\n            <li>Generate alternate flow tests for dependency interactions that can return null or an \"absent\" return type.</li>\n            <li>Generate when/verify statements for dependency interactions in the source class's super types.</li>\n            <li>Use lambda expressions instead of statement blocks in assertThrows(..) calls.</li>\n            <li>Improve the test method naming convention for overloaded methods.</li>\n            <li>Improve test generation for abstract classes, static creator methods and enums.</li>\n          </ul>\n          <i>Changes in 1.5.5:</i>\n          <ul>\n            <li>Create templates for JUnit + Spring + AssertJ. These generate special tests for Spring controllers.</li>\n            <li>Generate when/verify statements for source classes with constructors provided by Lombok annotations.</li>\n            <li>Support adding test methods to test classes that start with the prefix \"Test\".</li>\n          </ul>\n          <i>Changes in 1.5.4:</i>\n          <ul>\n            <li>Support the Enhanced DynamoDB client in AWS SDK V2.</li>\n            <li>Create templates for JUnit4 + AssertJ and JUnit5 + AssertJ.</li>\n            <li>Add FluentList.union(...) APIs.</li>\n            <li>Improve support for projects containing modules that use different test frameworks.</li>\n            <li>Generate tests for Java servlet methods. Use the MockHttpRequest/Response classes from Spring when they're available.</li>\n            <li>Use initialization methods List.of(...) and Set.of(...) when available.</li>\n          </ul>\n          <i>Changes in 1.5.3:</i>\n          <ul>\n            <li>Make the template editor in the settings menu grow/shrink when the user changes the size of the settings menu.</li>\n            <li>Generate code to initialize list properties of DTO Beans generated by JAXB.</li>\n            <li>Use the static initialization methods: Map.of(...) and Map.ofEntries(...) to initialize maps when they are available (Java 9+).</li>\n            <li>Improve logic for determining whether a class is a DTO Bean.</li>\n          </ul>\n          <i>Changes in 1.5.2:</i>\n          <ul>\n            <li>Fix issue that causes IntelliJ IDEA to freeze when creating test classes in certain cases.</li>\n            <li>Reduce the maximum number of setters that can be called when initializing a DTO Bean recursively.</li>\n            <li>Add a quick setting to configure the maximum number of setters that can be called when initializing a DTO bean recursively.</li>\n          </ul>\n    \n    ","dependencies":["com.intellij.modules.java"],"optionalDependencies":["org.intellij.groovy","com.intellij.velocity"],"since":"183.0","size":9187945}